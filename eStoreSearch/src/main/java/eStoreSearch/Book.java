/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package eStoreSearch;

public class Book extends Product{

    private String authors = new String();
    private String publisher = new String();
    // default values for non-required strings
    String defaultAuthors = null;
    String defaultPublisher = null;

    /* * * * * * * * * * * * * CONSTRUCTORS * * * * * * * * * * * * */
   
    public Book() {
        super();
        authors = "";
        publisher = "";
    }

    public Book (String productID, String description, double price, int year, String authors, String publisher) throws Exception{
        super(productID, description, price, year);
        this.setAuthors(authors);
        this.setPublisher(publisher);
    } 
   
   
    public Book(Book original) // copy constructor
    {
        //***super checks that original is not null
        super(original);
        original.setAuthors(this.authors);
        original.setPublisher(this.publisher);
    }



/** 
 * @return String
 */
/* * * * * * * * * * * * * * GETTERS * * * * * * * * * * * * * */

    public String getAuthors(){
        return authors;
    }

    
    /** 
     * @return String
     */
    public String getPublisher(){
        return publisher;
    }



/** 
 * @param authors
 * @return boolean
 */
/* * * * * * * * * * * * * * SETTERS * * * * * * * * * * * * * */

    public boolean setAuthors(String authors){

        //field not required, any value/digits/length allowed... set regardless of what stored in maker
            this.authors = (authors);
            return true;
    }

    
    /** 
     * @param publisher
     * @return boolean
     */
    public boolean setPublisher (String publisher){

        //field not required, any value/digits/length allowed... set regardless of what stored in maker
            this.publisher = (publisher);
            return true;
    }
  



/** 
 * @return String
 */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
   
    @Override
    public String toString(){
        return (super.toString() 
               + "Author(s):  " + authors 
               + "\nPublisher:  " + publisher + "\n");
    }

    
    /** 
     * @param other
     * @return boolean
     */
    @Override
    public boolean equals(Object other){
        if (other == null){
            return false;
        }
        else if (getClass() != other.getClass()) {
            return false;
        }
        else {
            Book otherBook = (Book)other;
            return (super.equals(otherBook) && authors.equalsIgnoreCase(otherBook.authors) && publisher.equalsIgnoreCase(otherBook.publisher));
        }
    }



/** 
 * @param args
 */
/* * * * * * * * * * * * * * * MAIN * * * * * * * * * * * * * * */
    public static void main(String[] args) {
       
       
    }
}
